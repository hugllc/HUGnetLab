<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by PHP Project Wizard (PPW) 1.0.4 on Mon Oct 3 15:21:39 CDT 2011 -->

<project name="deb" default="build" basedir=".">
    <property name="deb.setup" value="${basedir}/deb"/>
    <property name="deb.source" value="${basedir}/"/>
    <property name="deb.staging" value="${basedir}/build/deb"/>
    <property name="deb.release" value="" />
    <property name="deb.prefix" value="/usr/local" />
    <property name="deb.versionfile" value="${basedir}/VERSION.TXT" />

    <exec executable="grep" failonerror="true"
        outputproperty="deb.version" errorproperty="deb.versionerror">
        <arg line='-o -e "[0-9]\{1,\}\.[0-9]\{1,\}\.[0-9]\{1,\}[-alpha0-9]\{0,\}" ${deb.versionfile}'
            />
    </exec>
    <property name="deb.builddir" value="${basedir}/rel" />
    <property name="deb.outputfile" value="${deb.builddir}/HUGnetLab_${deb.version}${deb.release}_all.deb" />
    <property name="deb.postloc" value="hugnet.int.hugllc.com:/home/reprepro/incoming/" />

    <target name="clean" description="Clean up and create artifact directories">
        <delete dir="${deb.staging}" failonerror="false"/>
        <delete failonerror="false">
            <fileset dir="${deb.builddir}" includes="*.deb"/>
        </delete>
    </target>

    <target name="setup" description="Copy all of the files to build the deb">
        <echo>Setting up for HUGnetLib 'v${deb.version}'</echo>

        <mkdir dir="${deb.staging}"/>
        <copy todir="${deb.staging}">
            <fileset dir="${deb.setup}"/>
        </copy>
        <mkdir dir="${deb.staging}/var/www"/>
        <copy file="${deb.source}/index.php" todir="${deb.staging}/var/www" />
        <copy file="${deb.source}/VERSION.TXT" todir="${deb.staging}/var/www" />
        <copy todir="${deb.staging}${deb.prefix}/var/www">
            <fileset dir="${deb.source}/ajax/"/>
        </copy>
        <copy todir="${deb.staging}${deb.prefix}/var/www">
            <fileset dir="${deb.source}/home/"/>
        </copy>
        <copy todir="${deb.staging}${deb.prefix}/var/www">
            <fileset dir="${deb.source}/includes/"/>
        </copy>
        <copy todir="${deb.staging}${deb.prefix}/var/www">
            <fileset dir="${deb.source}/templates/"/>
        </copy>
        <chmod file="${deb.staging}/DEBIAN/postinst" perm="ugo+rx"/>
        <chmod file="${deb.staging}/DEBIAN/prerm" perm="ugo+rx"/>
        <replaceregexp file="${deb.staging}/DEBIAN/control"
                    match="%VERSION%"
                    replace="${deb.version}"
        />
    </target>
    <target name="deb" description="build the deb">
        <mkdir dir="${deb.builddir}"/>
        <exec executable="dpkg" failonerror="true">
            <arg line="-b ${deb.staging}
                       ${deb.outputfile}"/>
        </exec>
    </target>
    <target name="sign" description="sign the deb">
        <exec executable="dpkg-sig" failonerror="true" dir="${deb.builddir}">
            <arg line="-s builder
                       ${deb.outputfile}"/>
        </exec>
    </target>
    <target name="post" description="post the deb" depends="build">
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.outputfile}
                        ${deb.postloc}main/"/>
        </exec>
    </target>
    <target name="testpost" description="post the deb" depends="build">
        <exec executable="rsync" failonerror="true" dir="${deb.builddir}">
            <arg line="-av ${deb.outputfile}
                        ${deb.postloc}testing/"/>
        </exec>
    </target>
    <target name="postclean" description="build the deb">
        <delete dir="${deb.staging}"/>
    </target>
    <target name="build" depends="clean,setup,deb,sign,postclean"/>

</project>
